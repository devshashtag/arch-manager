#!/usr/bin/env bash

function copy() {
    local src="$1"
    local dest="$2"

    cmd "cp -ra '$src' '$dest'"
}

# absolute path
function absPath() { sed "s|^~|$HOME|" <<< "$1"; }

# join two path
join_path() { echo "${1:+$1/}$2" | sed 's#//#/#g'; }

function isExist(){
    if [ -e "$(absPath "$1")" ]; then
        echo true
    else
        echo false
    fi
}

function loadPaths(){
    local backupPaths="$1"

    # check paths
    while IFS= read -r line; do
        # skip comments, empty lines
        grep -qE "(^#|^$)" <<< "$line" && continue

        local path="$(absPath "$line")"

        # check if paths exist
        if grep -qi true <<< $(isExist "$path"); then
            # existing path
            message "${green}[Loaded]$red ==> {norm}$line"

            paths="$paths$path,"
            let loaded++
        else
            # non-existing path
            message "${red}[Error ] ==> $yellow$line ${important}path not exist!"

            let error++
        fi
    done < "$backupPaths"

    paths="${paths%,}"
}

function exportBackup() {
    local backupPaths="$1"
    local backupDir="$(join_path "${backup[dir]}" "${backup[export_format]}")"
    local loaded=0
    local error=0
    local paths

    # load paths
    loadPaths "$backupPaths"

    # export info
    newline_sep
    message "destination path: $cyan$backupDir"
    message "not exists paths: $red$error"
    message "loaded paths: $green$loaded"
    newline

    grep -qi false <<< "$(YN "${cyan}do you want to export loaded paths")" && return
    newline_sep

    # export configs
    cmd "mkdir -p '$backupDir'"

    local IFS=','

    savedColor="$cmdColor"

    for src in ${paths[@]};do
        local exportPath="$(join_path "$backupDir" "$(dirname $src)")"

        # create nested backup dirs if not exist
        if grep -qi false <<< $(isExist "$exportPath"); then
            cmdColor="$normal"
            cmd "mkdir -p '$exportPath'"
        fi

        # export
        cmdColor="$yellow"
        copy "$src" "$exportPath"
    done

    cmdColor="$savedColor"
}

function importBackup() {
    local backupDir="$1"
    local backupDirs="$(find "$backupDir" -mindepth 1 -maxdepth 1 -exec basename {} \;)"
    local dest="/"
    local IFS=$'\n'

    savedColor="$cmdColor"
    cmdColor="$yellow"

    for path in ${backupDirs[@]};do
        local src="$(join_path "$backupDir" "$path")"

        copy "$src" "$dest"
    done

    cmdColor="$savedColor"
}